# Claude Code Context Sharing Example Configuration
# Demonstrates how to enable context sharing between multiple Claude Code agents
# This allows agents to share their working directories for collaborative problem solving

agents:
    - id: "claude_code_agent1"
      backend:
        type: "claude_code"
        cwd: "claude_code_workspace1" # Initial working directory for agent 1
    - id: "claude_code_agent"
      backend:
        type: "claude_code"
        cwd: "claude_code_workspace2"
# Orchestrator configuration with context sharing enabled
# orchestrator:
#   snapshot_storage: "claude_code_snapshots"  # Directory to store workspace snapshots
#   agent_temporary_workspace: "claude_code_temp_workspaces"  # Directory for temporary agent workspaces

# Usage example:
# uv run python -m massgen.cli --config claude_code_context_sharing.yaml "Create a Python web scraper with tests and documentation"
#
# What happens:
# 1. Agent 1 implements the web scraper
# 2. When Agent 1 completes, its workspace is saved to snapshot storage
# 3. Agent 2 starts with access to Agent 1's work (in anonymized form)
# 4. Agent 2 reviews and adds tests
# 5. Agent 3 gets both agents' work and adds documentation
# 6. All workspaces are preserved for debugging and analysis

ui:
  type: "simple"
  logging_enabled: true